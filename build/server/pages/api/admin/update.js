"use strict";(()=>{var e={};e.id=2811,e.ids=[2811],e.modules={429:e=>{e.exports=require("cookie-session")},62418:e=>{e.exports=require("mysql2/promise")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},3511:e=>{e.exports=require("passport")},53686:e=>{e.exports=require("passport-steam")},61282:e=>{e.exports=require("child_process")},99648:e=>{e.exports=import("axios")},97564:e=>{e.exports=import("chalk")},97612:e=>{e.exports=import("drizzle-orm")},99089:e=>{e.exports=import("drizzle-orm/mysql-core")},63024:e=>{e.exports=import("drizzle-orm/mysql2")},45616:e=>{e.exports=import("next-connect")},2782:e=>{e.exports=import("steam-api-sdk")},9926:e=>{e.exports=import("zod")},48555:(e,t,r)=>{r.a(e,async(e,s)=>{try{r.r(t),r.d(t,{config:()=>p,default:()=>l,routeModule:()=>c});var a=r(71802),i=r(47153),o=r(56249),n=r(12936),u=e([n]);n=(u.then?(await u)():u)[0];let l=(0,o.l)(n,"default"),p=(0,o.l)(n,"config"),c=new a.PagesAPIRouteModule({definition:{kind:i.x.PAGES_API,page:"/api/admin/update",pathname:"/api/admin/update",bundlePath:"",filename:""},userland:n});s()}catch(e){s(e)}})},12936:(e,t,r)=>{r.a(e,async(e,s)=>{try{r.r(t),r.d(t,{default:()=>p});var a=r(61282),i=r(6346),o=r(41942),n=e([i,o]);[i,o]=n.then?(await n)():n;let u=async(e,t)=>{if(await i.Z.run(e,t),!await (0,o.Z)(e,t,["@web/root","@css/root"],"OR"))return;let{method:r}=e;if("POST"===r)try{log("Updating the panel...");let e=await l("pnpm run pull");return await l("^^C"),process.exit(0),log("Panel updated!"),t.status(200).json(e)}catch(e){return error(e),t.status(500).json(e)}return t.status(405).end()},l=e=>new Promise(function(t){(0,a.exec)(e,(e,r,s)=>{if(e){t({stdout:r,stderr:s});return}t({stdout:r,stderr:s})})}),p=u;s()}catch(e){s(e)}})},6346:(e,t,r)=>{r.a(e,async(e,s)=>{try{r.d(t,{Z:()=>p});var a=r(79649),i=r(45616),o=r(429),n=r.n(o),u=e([i]);i=(u.then?(await u)():u)[0];let l=(0,i.default)();l.use(n()({secret:process.env.SESSION_SECRET||"secret",maxAge:10368e6})),l.use(a.Z.initialize()),l.use(a.Z.session());let p=l;s()}catch(e){s(e)}})},79649:(e,t,r)=>{r.d(t,{Z:()=>n});var s=r(3511),a=r.n(s),i=r(53686);a().serializeUser(async(e,t)=>{t(null,e)}),a().deserializeUser(async(e,t)=>{t(null,e)});let o=process.env.DOMAIN||"";o.startsWith("http")||(o=`https://${o}`),a().use(new i.Strategy({returnURL:`${o}/api/auth/return`,realm:`${o}/`,apiKey:process.env.STEAM_API_KEY||""},(e,t,r)=>(t.identifier=e,r(null,t))));let n=a()},41942:(e,t,r)=>{r.a(e,async(e,s)=>{try{r.d(t,{Z:()=>o});var a=r(79173),i=e([a]);a=(i.then?(await i)():i)[0];let o=(e,t,r,s="AND")=>new Promise(async(i,o)=>{if(!a.Z)return t.status(500).json({message:"Database not connected"});if(!e.user)return o(t.status(400).json({success:!1,error:"Protected Route"}));let n=e.user.id,u=await a.Z.admins.getBySteam64(n);if(!u)return o(t.status(401).json({success:!1,error:"Protected Route"}));if(!r)return i(u);let l=null;if("object"==typeof u.flags)l=u.flags;else{let e=await a.Z.adminGroups.getById(u.flags);e&&(l=e.flags)}if(null===l||!("AND"===s?r.every(e=>l.includes(e)):r.some(e=>l.includes(e))))return o(t.status(403).json({success:!1,error:"Protected Route"}));i(u)});s()}catch(e){s(e)}})}};var t=require("../../../webpack-api-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[3337],()=>r(48555));module.exports=s})();