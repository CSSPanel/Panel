"use strict";(()=>{var e={};e.id=7983,e.ids=[7983],e.modules={429:e=>{e.exports=require("cookie-session")},62418:e=>{e.exports=require("mysql2/promise")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},99648:e=>{e.exports=import("axios")},97564:e=>{e.exports=import("chalk")},45616:e=>{e.exports=import("next-connect")},2782:e=>{e.exports=import("steam-api-sdk")},9926:e=>{e.exports=import("zod")},84918:(e,t,r)=>{r.a(e,async(e,s)=>{try{r.r(t),r.d(t,{config:()=>d,default:()=>l,routeModule:()=>p});var a=r(20114),n=r(32128),i=r(57797),o=r(66033),u=e([o]);o=(u.then?(await u)():u)[0];let l=(0,i.l)(o,"default"),d=(0,i.l)(o,"config"),p=new a.PagesAPIRouteModule({definition:{kind:n.x.PAGES_API,page:"/api/admin/player-reports/[reportId]",pathname:"/api/admin/player-reports/[reportId]",bundlePath:"",filename:""},userland:o});s()}catch(e){s(e)}})},66033:(e,t,r)=>{r.a(e,async(e,s)=>{try{r.r(t),r.d(t,{default:()=>d});var a=r(59236),n=r(14676),i=r(38910),o=r(48874),u=r(78260),l=e([a,n,i,o,u]);[a,n,i,o,u]=l.then?(await l)():l;let d=async(e,t)=>{if(!o.Z)return t.status(500).json({message:"Database not connected"});await u.Z.run(e,t);let{method:r}=e,s=await (0,n.Z)(e,t);if(!s)return;let{reportId:l}=e.query;if(!await o.Z.reports.getById(Number(l)))return t.status(404).json({error:"Report not found"});let d=await (0,a.ed)("player-reports");if(!d.enabled)return t.status(404).json({error:"Module not enabled"});if("POST"===r)try{await o.Z.reports.setHandlerId(Number(l),s.player_steamid.toString());let e=d.settings["webhook-url"];return e&&(0,i.Z)({url:e,embeds:[{title:`Report #${l} Handled`,color:7405415,description:`**Status:** Handled
**Handled by:** ${`[${s.player_name}](https://steamcommunity.com/profiles/${s.player_steamid})`||s.player_steamid}`,timestamp:new Date().toISOString()}],addFooter:!0}),t.status(201).send("")}catch(e){return t.status(500).json({error:e})}};s()}catch(e){s(e)}})},78260:(e,t,r)=>{r.a(e,async(e,s)=>{try{r.d(t,{Z:()=>d});var a=r(9014),n=r(45616),i=r(429),o=r.n(i),u=e([n]);n=(u.then?(await u)():u)[0];let l=(0,n.default)();l.use(o()({secret:process.env.SESSION_SECRET||"secret",maxAge:10368e6})),l.use(a.Z.initialize()),l.use(a.Z.session());let d=l;s()}catch(e){s(e)}})},9014:(e,t,r)=>{r.d(t,{Z:()=>o});let s=require("passport");var a=r.n(s);let n=require("passport-steam");a().serializeUser(async(e,t)=>{t(null,e)}),a().deserializeUser(async(e,t)=>{t(null,e)});let i=process.env.DOMAIN||"";i.startsWith("http")||(i=`https://${i}`),a().use(new n.Strategy({returnURL:`${i}/api/auth/return`,realm:`${i}/`,apiKey:process.env.STEAM_API_KEY||""},(e,t,r)=>(t.identifier=e,r(null,t))));let o=a()},14676:(e,t,r)=>{r.a(e,async(e,s)=>{try{r.d(t,{Z:()=>i});var a=r(48874),n=e([a]);a=(n.then?(await n)():n)[0];let i=(e,t,r,s="AND")=>new Promise(async(n,i)=>{if(!a.Z)return t.status(500).json({message:"Database not connected"});if(!e.user)return i(t.status(400).json({success:!1,error:"Protected Route"}));let o=e.user.id,u=await a.Z.admins.getBySteam64(o);if(!u)return i(t.status(401).json({success:!1,error:"Protected Route"}));if(!r)return n(u);let l=null;if("object"==typeof u.flags)l=u.flags;else{let e=await a.Z.adminGroups.getById(u.flags);e&&(l=e.flags)}if(null===l||!("AND"===s?r.every(e=>l.includes(e)):r.some(e=>l.includes(e))))return i(t.status(403).json({success:!1,error:"Protected Route"}));n(u)});s()}catch(e){s(e)}})}};var t=require("../../../../webpack-api-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[6941],()=>r(84918));module.exports=s})();