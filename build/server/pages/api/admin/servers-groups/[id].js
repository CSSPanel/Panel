"use strict";(()=>{var e={};e.id=3249,e.ids=[3249],e.modules={43582:e=>{e.exports=require("@fabricio-191/valve-server-query")},429:e=>{e.exports=require("cookie-session")},62418:e=>{e.exports=require("mysql2/promise")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},99648:e=>{e.exports=import("axios")},97564:e=>{e.exports=import("chalk")},97612:e=>{e.exports=import("drizzle-orm")},99089:e=>{e.exports=import("drizzle-orm/mysql-core")},63024:e=>{e.exports=import("drizzle-orm/mysql2")},45616:e=>{e.exports=import("next-connect")},2782:e=>{e.exports=import("steam-api-sdk")},9926:e=>{e.exports=import("zod")},32612:(e,r,t)=>{t.a(e,async(e,s)=>{try{t.r(r),t.d(r,{config:()=>c,default:()=>d,routeModule:()=>l});var a=t(54396),o=t(76255),i=t(39766),n=t(71808),u=e([n]);n=(u.then?(await u)():u)[0];let d=(0,i.l)(n,"default"),c=(0,i.l)(n,"config"),l=new a.PagesAPIRouteModule({definition:{kind:o.x.PAGES_API,page:"/api/admin/servers-groups/[id]",pathname:"/api/admin/servers-groups/[id]",bundlePath:"",filename:""},userland:n});s()}catch(e){s(e)}})},71808:(e,r,t)=>{t.a(e,async(e,s)=>{try{t.r(r),t.d(r,{default:()=>l});var a=t(96610),o=t(93066),i=t(26842),n=t(57424),u=t(52999),d=t(31310),c=e([a,o,i,n,u,d]);[a,o,i,n,u,d]=c.then?(await c)():c;let l=async(e,r)=>{await o.Z.run(e,r);let{method:t}=e;if(!await (0,n.Z)(e,r,["@web/root","@web/servers","@css/root","@web/rcon"],"OR"))return;let{id:s}=e.query;if(!a.Z)return r.status(500).json({message:"Database not connected"});let c=await a.Z.serversGroups.getById(Number(s));if(!c)return r.status(404).json({message:"Servers group not found"});switch(t){case"PUT":{let{name:t,servers:o}=i.Z.parse(e.body);return await a.Z.serversGroups.update(Number(s),{name:t,servers:o}),await (0,u.x)("css_reloadadmins"),(0,d.Z)("Servers Group Edit",`Admin ${e.user?.displayName} (${e.user?.id}) edited servers group "${c.name}"`,e.user?.id,"adminActionsDiscordWebhook"),r.status(201).json(c)}case"POST":try{let{message:t}=e.body,o=c.servers,i=await a.Z.servers.getAll();for await(let e of o){let r=i.find(r=>r.id.toString()===e);r&&await (0,u.Z)(r.id,t)}return await (0,u.x)("css_reloadadmins"),(0,d.Z)("Servers Group Rcon",`Admin ${e.user?.displayName} (${e.user?.id}) send a rcon command to servers group #${s} (command: ${t})`,e.user?.id,"adminActionsDiscordWebhook"),r.status(201).end()}catch(e){return r.status(500).json(e)}case"DELETE":try{return await a.Z.serversGroups.delete(Number(s)),(0,d.Z)("Servers Group Delete",`Admin ${e.user?.displayName} (${e.user?.id}) deleted servers group #${c.name}`,e.user?.id,"adminActionsDiscordWebhook"),await (0,u.x)("css_reloadadmins"),r.status(200).send("Servers Group deleted")}catch(e){return r.status(500).json({message:"Error while deleting servers groups",error:e})}default:return r.status(405).json({message:"Method not allowed"})}};s()}catch(e){s(e)}})},52999:(e,r,t)=>{t.a(e,async(e,s)=>{try{t.d(r,{Z:()=>d,x:()=>u});var a=t(43582),o=t(96610),i=e([o]);o=(i.then?(await i)():i)[0];let n=async(e,r)=>{if(!o.Z)throw Error("Database not connected");try{let t=await o.Z.servers.getById(Number(e));if(!t)throw Error("Server not found");let{address:s,rcon:i}=t,[n,u]=s.split(":");if(!i)throw Error("Server has no rcon password");let d=await (0,a.RCON)({ip:n,port:Number(u),password:i,enableWarns:!0,retries:2,timeout:2e3});d.authenticate();let c=await d.exec(r);if(!c)return"No response from server";return c}catch(e){throw warn(`Error while sending rcon command: ${e}`),e}},u=async e=>{if(!o.Z)throw Error("Database not connected");let r=await o.Z.servers.getAll();return await Promise.all(r.map(async r=>{try{let t=await n(r.id,e);return{server:r.hostname,response:t}}catch(e){return{server:r.hostname,response:e}}}))},d=n;s()}catch(e){s(e)}})},31310:(e,r,t)=>{t.a(e,async(e,s)=>{try{t.d(r,{Z:()=>n});var a=t(96610),o=t(92770),i=e([a,o]);[a,o]=i.then?(await i)():i;let n=async(e,r,t,s="discordWebhook")=>{if(a.Z)try{a.Z.logs.create(e,r,t);let i=await a.Z.settings.getByKey(s,!1);i&&"string"==typeof i&&(0,o.Z)({url:i,embeds:[{title:`**▬▬▬▬▬ [LOG :: ${e}] ▬▬▬▬▬**`,color:5352959,description:r,timestamp:new Date().toISOString()}]})}catch(e){console.error(`Failed to log: ${e}`)}};s()}catch(e){s(e)}})},93066:(e,r,t)=>{t.a(e,async(e,s)=>{try{t.d(r,{Z:()=>c});var a=t(79809),o=t(45616),i=t(429),n=t.n(i),u=e([o]);o=(u.then?(await u)():u)[0];let d=(0,o.default)();d.use(n()({secret:process.env.SESSION_SECRET||"secret",maxAge:10368e6})),d.use(a.Z.initialize()),d.use(a.Z.session());let c=d;s()}catch(e){s(e)}})},79809:(e,r,t)=>{t.d(r,{Z:()=>n});let s=require("passport");var a=t.n(s);let o=require("passport-steam");a().serializeUser(async(e,r)=>{r(null,e)}),a().deserializeUser(async(e,r)=>{r(null,e)});let i=process.env.DOMAIN||"";i.startsWith("http")||(i=`https://${i}`),a().use(new o.Strategy({returnURL:`${i}/api/auth/return`,realm:`${i}/`,apiKey:process.env.STEAM_API_KEY||""},(e,r,t)=>(r.identifier=e,t(null,r))));let n=a()},57424:(e,r,t)=>{t.a(e,async(e,s)=>{try{t.d(r,{Z:()=>i});var a=t(96610),o=e([a]);a=(o.then?(await o)():o)[0];let i=(e,r,t,s="AND")=>new Promise(async(o,i)=>{if(!a.Z)return r.status(500).json({message:"Database not connected"});if(!e.user)return i(r.status(400).json({success:!1,error:"Protected Route"}));let n=e.user.id,u=await a.Z.admins.getBySteam64(n);if(!u)return i(r.status(401).json({success:!1,error:"Protected Route"}));if(!t)return o(u);let d=null;if("object"==typeof u.flags)d=u.flags;else{let e=await a.Z.adminGroups.getById(u.flags);e&&(d=e.flags)}if(null===d||!("AND"===s?t.every(e=>d.includes(e)):t.some(e=>d.includes(e))))return i(r.status(403).json({success:!1,error:"Protected Route"}));o(u)});s()}catch(e){s(e)}})},26842:(e,r,t)=>{t.a(e,async(e,s)=>{try{t.d(r,{Z:()=>i});var a=t(9926),o=e([a]);let i=(a=(o.then?(await o)():o)[0]).z.object({name:a.z.string().min(3),servers:a.z.array(a.z.string())});s()}catch(e){s(e)}})}};var r=require("../../../../webpack-api-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[9585],()=>t(32612));module.exports=s})();