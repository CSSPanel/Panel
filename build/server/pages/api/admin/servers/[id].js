"use strict";(()=>{var e={};e.id=788,e.ids=[788],e.modules={43582:e=>{e.exports=require("@fabricio-191/valve-server-query")},429:e=>{e.exports=require("cookie-session")},62418:e=>{e.exports=require("mysql2/promise")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},3511:e=>{e.exports=require("passport")},53686:e=>{e.exports=require("passport-steam")},99648:e=>{e.exports=import("axios")},97564:e=>{e.exports=import("chalk")},97612:e=>{e.exports=import("drizzle-orm")},99089:e=>{e.exports=import("drizzle-orm/mysql-core")},63024:e=>{e.exports=import("drizzle-orm/mysql2")},45616:e=>{e.exports=import("next-connect")},2782:e=>{e.exports=import("steam-api-sdk")},9926:e=>{e.exports=import("zod")},97915:(e,r,t)=>{t.a(e,async(e,s)=>{try{t.r(r),t.d(r,{config:()=>c,default:()=>u,routeModule:()=>l});var a=t(71802),n=t(47153),o=t(56249),i=t(1591),d=e([i]);i=(d.then?(await d)():d)[0];let u=(0,o.l)(i,"default"),c=(0,o.l)(i,"config"),l=new a.PagesAPIRouteModule({definition:{kind:n.x.PAGES_API,page:"/api/admin/servers/[id]",pathname:"/api/admin/servers/[id]",bundlePath:"",filename:""},userland:i});s()}catch(e){s(e)}})},1591:(e,r,t)=>{t.a(e,async(e,s)=>{try{t.r(r),t.d(r,{default:()=>l});var a=t(79173),n=t(6346),o=t(8326),i=t(41942),d=t(7707),u=t(51861),c=e([a,n,o,i,d,u]);[a,n,o,i,d,u]=c.then?(await c)():c;let l=async(e,r)=>{await n.Z.run(e,r);let{method:t}=e;if(!await (0,i.Z)(e,r,["@web/root","@web/servers","@css/root","@web/rcon"],"OR"))return;let{id:s}=e.query;if(!a.Z)return r.status(500).json({message:"Database not connected"});if(!await a.Z.servers.getById(Number(s)))return r.status(404).json({message:"Server not found"});switch(t){case"PUT":{let{hostname:t,address:n,rcon:i,hidden:d}=o.Z.parse(e.body),c=await a.Z.servers.update(Number(s),{hostname:t,address:n,rcon:i,hidden:d});return(0,u.Z)("Server Edit",`Admin ${e.user?.displayName} (${e.user?.id}) edited server "${t}" (ip: ${n})`,e.user?.id,"adminActionsDiscordWebhook"),r.status(201).json(c)}case"POST":try{let{message:t}=e.body,a=await (0,d.Z)(Number(s),t);return(0,u.Z)("Server Rcon",`Admin ${e.user?.displayName} (${e.user?.id}) send a rcon command to server #${s} (command: ${t})`,e.user?.id,"adminActionsDiscordWebhook"),r.status(200).json({response:a})}catch(e){return r.status(500).json(e)}case"DELETE":try{if((await a.Z.admins.getByServerId(s)).length>0)return r.status(403).send("Please remove all admins from this server first");return await a.Z.servers.delete(Number(s)),(0,u.Z)("Server Delete",`Admin ${e.user?.displayName} (${e.user?.id}) deleted server #${s}`,e.user?.id,"adminActionsDiscordWebhook"),r.status(200).send("Server deleted")}catch(e){return r.status(500).json({message:"Error while deleting server",error:e})}default:return r.status(405).json({message:"Method not allowed"})}};s()}catch(e){s(e)}})},7707:(e,r,t)=>{t.a(e,async(e,s)=>{try{t.d(r,{Z:()=>u,x:()=>d});var a=t(43582),n=t(79173),o=e([n]);n=(o.then?(await o)():o)[0];let i=async(e,r)=>{if(!n.Z)throw Error("Database not connected");try{let t=await n.Z.servers.getById(Number(e));if(!t)throw Error("Server not found");let{address:s,rcon:o}=t,[i,d]=s.split(":");if(!o)throw Error("Server has no rcon password");let u=await (0,a.RCON)({ip:i,port:Number(d),password:o,enableWarns:!0,retries:2,timeout:2e3});u.authenticate();let c=await u.exec(r);if(!c)return"No response from server";return c}catch(e){throw warn(`Error while sending rcon command: ${e}`),e}},d=async e=>{if(!n.Z)throw Error("Database not connected");let r=await n.Z.servers.getAll();return await Promise.all(r.map(async r=>{try{let t=await i(r.id,e);return{server:r.hostname,response:t}}catch(e){return{server:r.hostname,response:e}}}))},u=i;s()}catch(e){s(e)}})},51861:(e,r,t)=>{t.a(e,async(e,s)=>{try{t.d(r,{Z:()=>i});var a=t(79173),n=t(10189),o=e([a,n]);[a,n]=o.then?(await o)():o;let i=async(e,r,t,s="discordWebhook")=>{if(a.Z)try{a.Z.logs.create(e,r,t);let o=await a.Z.settings.getByKey(s,!1);o&&"string"==typeof o&&(0,n.Z)({url:o,embeds:[{title:`**▬▬▬▬▬ [LOG :: ${e}] ▬▬▬▬▬**`,color:5352959,description:r,timestamp:new Date().toISOString()}]})}catch(e){console.error(`Failed to log: ${e}`)}};s()}catch(e){s(e)}})},6346:(e,r,t)=>{t.a(e,async(e,s)=>{try{t.d(r,{Z:()=>c});var a=t(79649),n=t(45616),o=t(429),i=t.n(o),d=e([n]);n=(d.then?(await d)():d)[0];let u=(0,n.default)();u.use(i()({secret:process.env.SESSION_SECRET||"secret",maxAge:10368e6})),u.use(a.Z.initialize()),u.use(a.Z.session());let c=u;s()}catch(e){s(e)}})},79649:(e,r,t)=>{t.d(r,{Z:()=>i});var s=t(3511),a=t.n(s),n=t(53686);a().serializeUser(async(e,r)=>{r(null,e)}),a().deserializeUser(async(e,r)=>{r(null,e)});let o=process.env.DOMAIN||"";o.startsWith("http")||(o=`https://${o}`),a().use(new n.Strategy({returnURL:`${o}/api/auth/return`,realm:`${o}/`,apiKey:process.env.STEAM_API_KEY||""},(e,r,t)=>(r.identifier=e,t(null,r))));let i=a()},41942:(e,r,t)=>{t.a(e,async(e,s)=>{try{t.d(r,{Z:()=>o});var a=t(79173),n=e([a]);a=(n.then?(await n)():n)[0];let o=(e,r,t,s="AND")=>new Promise(async(n,o)=>{if(!a.Z)return r.status(500).json({message:"Database not connected"});if(!e.user)return o(r.status(400).json({success:!1,error:"Protected Route"}));let i=e.user.id,d=await a.Z.admins.getBySteam64(i);if(!d)return o(r.status(401).json({success:!1,error:"Protected Route"}));if(!t)return n(d);let u=null;if("object"==typeof d.flags)u=d.flags;else{let e=await a.Z.adminGroups.getById(d.flags);e&&(u=e.flags)}if(null===u||!("AND"===s?t.every(e=>u.includes(e)):t.some(e=>u.includes(e))))return o(r.status(403).json({success:!1,error:"Protected Route"}));n(d)});s()}catch(e){s(e)}})},8326:(e,r,t)=>{t.a(e,async(e,s)=>{try{t.d(r,{Z:()=>o});var a=t(9926),n=e([a]);let o=(a=(n.then?(await n)():n)[0]).z.object({address:a.z.string().refine(e=>e.includes(":"),{message:"IP Address must include a port number"}),hostname:a.z.string().min(3),rcon:a.z.string().min(0).optional(),hidden:a.z.boolean().optional()});s()}catch(e){s(e)}})}};var r=require("../../../../webpack-api-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[3337],()=>t(97915));module.exports=s})();