"use strict";(()=>{var e={};e.id=2150,e.ids=[2150],e.modules={43582:e=>{e.exports=require("@fabricio-191/valve-server-query")},429:e=>{e.exports=require("cookie-session")},62418:e=>{e.exports=require("mysql2/promise")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},99648:e=>{e.exports=import("axios")},97564:e=>{e.exports=import("chalk")},97612:e=>{e.exports=import("drizzle-orm")},99089:e=>{e.exports=import("drizzle-orm/mysql-core")},63024:e=>{e.exports=import("drizzle-orm/mysql2")},45616:e=>{e.exports=import("next-connect")},2782:e=>{e.exports=import("steam-api-sdk")},9926:e=>{e.exports=import("zod")},70965:(e,t,s)=>{s.a(e,async(e,r)=>{try{s.r(t),s.d(t,{config:()=>d,default:()=>l,routeModule:()=>u});var a=s(54396),n=s(76255),o=s(39766),i=s(52133),c=e([i]);i=(c.then?(await c)():c)[0];let l=(0,o.l)(i,"default"),d=(0,o.l)(i,"config"),u=new a.PagesAPIRouteModule({definition:{kind:n.x.PAGES_API,page:"/api/skins/collections/[collectionId]",pathname:"/api/skins/collections/[collectionId]",bundlePath:"",filename:""},userland:i});r()}catch(e){r(e)}})},52133:(e,t,s)=>{s.a(e,async(e,r)=>{try{s.r(t),s.d(t,{default:()=>d});var a=s(52999),n=s(17077),o=s(24389),i=s(96610),c=s(93066),l=e([a,n,o,i,c]);[a,n,o,i,c]=l.then?(await l)():l;let d=async(e,t)=>{if(!i.Z)return t.status(500).json({message:"Database not connected"});if(!(await (0,n.ed)("skins-collections")).enabled)return t.status(404).json({message:"Module not found"});await c.Z.run(e,t);let{method:s}=e,{collectionId:r}=e.query,l=await i.Z.skins.collections.getById(Number(r));if(!l)return t.status(404).json({message:"Collection not found"});switch(s){case"GET":try{return t.status(200).json(l)}catch(e){return console.error(e),t.status(500).json({message:"Internal server error"})}case"POST":{let s=await (0,o.Z)(e,t);if(!s)return;let r=l.json.skins.map(e=>({...e,steamid:s.id}));for await(let e of(l.json.agents&&(l.json.agents.agent_ct&&await i.Z.skins.agents.setTeamAgent(s.id,l.json.agents.agent_ct),l.json.agents.agent_t&&await i.Z.skins.agents.setTeamAgent(s.id,l.json.agents.agent_t)),l.json.gloves&&l.json.gloves.weapon_defindex&&await i.Z.skins.gloves.setGloves(s.id,l.json.gloves.weapon_defindex),l.json.knife&&l.json.knife.knife&&await i.Z.skins.knife.setKnife(s.id,l.json.knife.knife),l.json.music&&l.json.music.music_id&&await i.Z.skins.music.setBySteamId(s.id,l.json.music.music_id),r))e.weapon_defindex&&e.weapon_paint_id&&await i.Z.skins.skins.setBySteamId({steamid:s.id,weapon_defindex:e.weapon_defindex,weapon_paint_id:e.weapon_paint_id,weapon_wear:e.weapon_wear||0,weapon_seed:e.weapon_seed||0});return(0,a.x)(`css_fexec ${s.id} css_wp`),t.status(200).json({message:"Collection copied"})}case"DELETE":try{let s=await (0,o.Z)(e,t);if(!s)return;if(s.id!==l.steamid)return t.status(403).json({message:"Forbidden"});return await i.Z.skins.collections.delete(Number(r)),t.status(200).json({message:"Collection deleted"})}catch(e){return console.error(e),t.status(500).json({message:"Internal server error"})}}};r()}catch(e){r(e)}})},52999:(e,t,s)=>{s.a(e,async(e,r)=>{try{s.d(t,{Z:()=>l,x:()=>c});var a=s(43582),n=s(96610),o=e([n]);n=(o.then?(await o)():o)[0];let i=async(e,t)=>{if(!n.Z)throw Error("Database not connected");try{let s=await n.Z.servers.getById(Number(e));if(!s)throw Error("Server not found");let{address:r,rcon:o}=s,[i,c]=r.split(":");if(!o)throw Error("Server has no rcon password");let l=await (0,a.RCON)({ip:i,port:Number(c),password:o,enableWarns:!0,retries:2,timeout:2e3});l.authenticate();let d=await l.exec(t);if(!d)return"No response from server";return d}catch(e){throw warn(`Error while sending rcon command: ${e}`),e}},c=async e=>{if(!n.Z)throw Error("Database not connected");let t=await n.Z.servers.getAll();return await Promise.all(t.map(async t=>{try{let s=await i(t.id,e);return{server:t.hostname,response:s}}catch(e){return{server:t.hostname,response:e}}}))},l=i;r()}catch(e){r(e)}})},93066:(e,t,s)=>{s.a(e,async(e,r)=>{try{s.d(t,{Z:()=>d});var a=s(79809),n=s(45616),o=s(429),i=s.n(o),c=e([n]);n=(c.then?(await c)():c)[0];let l=(0,n.default)();l.use(i()({secret:process.env.SESSION_SECRET||"secret",maxAge:10368e6})),l.use(a.Z.initialize()),l.use(a.Z.session());let d=l;r()}catch(e){r(e)}})},79809:(e,t,s)=>{s.d(t,{Z:()=>i});let r=require("passport");var a=s.n(r);let n=require("passport-steam");a().serializeUser(async(e,t)=>{t(null,e)}),a().deserializeUser(async(e,t)=>{t(null,e)});let o=process.env.DOMAIN||"";o.startsWith("http")||(o=`https://${o}`),a().use(new n.Strategy({returnURL:`${o}/api/auth/return`,realm:`${o}/`,apiKey:process.env.STEAM_API_KEY||""},(e,t,s)=>(t.identifier=e,s(null,t))));let i=a()},24389:(e,t,s)=>{s.a(e,async(e,r)=>{try{s.d(t,{Z:()=>o});var a=s(96610),n=e([a]);a=(n.then?(await n)():n)[0];let o=(e,t)=>new Promise(async(s,r)=>a.Z?e.user?void s(e.user):r(t.status(400).json({success:!1,error:"Protected Route"})):t.status(500).json({message:"Database not connected"}));r()}catch(e){r(e)}})}};var t=require("../../../../webpack-api-runtime.js");t.C(e);var s=e=>t(t.s=e),r=t.X(0,[9585],()=>s(70965));module.exports=r})();